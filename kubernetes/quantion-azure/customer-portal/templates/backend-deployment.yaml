apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: backend-deployment{{ template "include_branch_name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: backend{{ template "include_branch_name" . }}
    deploy: {{ template "datosProyecto.url" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend{{ template "include_branch_name" . }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backend{{ template "include_branch_name" . }}
      annotations:
        checksum/config: {{include (print $.Template.BasePath "/backend-configmap.yaml") .| sha256sum }}
    spec:
      initContainers:
      - name: wait-db-readyness
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup {{ template "mongodb_replicaset_host" . }}; do echo waiting for {{ template "mongodb_replicaset_host" . }}; sleep 2; done;']
        imagePullPolicy: Always
      containers:
      - image: "{{ .Values.backend.registry }}/{{ .Values.backend.repository }}:{{ .Values.backend.tag }}"
        name: backend{{ template "include_branch_name" . }}
        env:
          - name: Email__Smtp__Username
            valueFrom:
              secretKeyRef:
                name: email-credentials
                key: user
          - name: Email__Smtp__Password
            valueFrom:
              secretKeyRef:
                name: email-credentials
                key: password
          - name: Identity__Credentials__ClientId
            valueFrom:
              secretKeyRef:
                name: identity-credentials
                key: clientId
          - name: Identity__Credentials__ClientSecret
            valueFrom:
              secretKeyRef:
                name: identity-credentials
                key: clientSecret
          - name: Identity__Credentials__User
            valueFrom:
              secretKeyRef:
                name: identity-credentials
                key: user
          - name: Identity__Credentials__Password
            valueFrom:
              secretKeyRef:
                name: identity-credentials
                key: password
          - name: CustomerPortal_ApiKey
            valueFrom:
              secretKeyRef:
                name: customerportal-credentials
                key: apikey
#          - name: Payment__Credentials__User
#            valueFrom:
#             secretKeyRef:
#               name: payment-credentials
#               key: user
#          - name: Payment__Credentials__Password
#            valueFrom:
#             secretKeyRef:
#               name: payment-credentials
#               key: password
        envFrom:
          - configMapRef:
              name: backend-configmap
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        imagePullPolicy: Always
      imagePullSecrets:
        - name: quantion-registry
      